<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"
	default-lazy-init="true">
	<!-- 启用spring mvc注解 -->
    <context:annotation-config/>
	
	<!-- Spring加载资源文件加载所有的资源文件 -->
	<context:property-placeholder location="classpath:*.properties" />
	<!-- 自动扫描(自动注入) -->
	<context:component-scan base-package="com.hanxi.service" >
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />   
	</context:component-scan>
	<!-- 配置Spring的data连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property  name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>


		<!--maxActive: 最大连接数量 
		<property name="maxActive" value="150" />
		-->
		<!--minIdle: 最小空闲连接
		<property name="minIdle" value="5" />
		 -->
		<!--maxIdle: 最大空闲连接 
		<property name="maxIdle" value="20" />
		-->
		<!--initialSize: 初始化连接 
		<property name="initialSize" value="30" />
		-->
		<!-- 用来配置数据库断开后自动连接的 -->
		<!-- 连接被泄露时是否打印 
		<property name="logAbandoned" value="true" />
		-->
		<!--removeAbandoned: 是否自动回收超时连接 
		<property name="removeAbandoned" value="true" />
		-->
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) 
		<property name="removeAbandonedTimeout" value="10" />
		-->
		<!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒
		<property name="maxWait" value="1000" />
		 -->
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		-->
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量
		<property name="numTestsPerEvictionRun" value="10" />
		 -->
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 
		<property name="minEvictableIdleTimeMillis" value="10000" />
		<property name="validationQuery" value="SELECT NOW() FROM DUAL" />
		-->
	</bean>


<!-- 	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> -->
<!-- 		<constructor-arg index="0" ref="sqlSessionFactory" /> -->
<!-- 		<constructor-arg index="1" value="BATCH" /> -->
<!-- 	</bean> -->

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 关联dataSource连接池对象。 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
  		<property name="mapperLocations" value="classpath:com/hanxi/mapper/*.xml" />
		<!-- 配置别名,所有的domain类都配置了别名。可以直接使用类名 -->
		<property name="typeAliasesPackage" value="com.hanxi.entity" />
	</bean>

	<!-- 配置在哪个包下面的domain的mapper需要映射关系 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hanxi.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 事务管理器 只依赖于数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启事物标签配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class = "true"/>
	
<import resource="classpath:applicationContext-mvc.xml" /> 
</beans>  